library(Matrix)
library(irlba)
load('/Users/luke/Documents/GitHub/QualityPaper/rick/lf.rds')
lfa <- fread('/Users/luke/Documents/GitHub/QualityPaper/rick/lf.rds')
library(data.table)
lfa <- fread('/Users/luke/Documents/GitHub/QualityPaper/rick/lf.rds')
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file(), fig.width=16)
library(tidyverse)
bas_filepath <- "./data/metadata/average_quality_dt.txt"
#bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/bas_dt"
bas_dt <- read_tsv(bas_filepath)
install.packages("tidyverse")
library(tidyverse)
library(tictoc)
install.packages("tictoc")
library(tidyverse)
library(tictoc)
options(future.globals.maxSize= 10000000000)
plan(multicore)
install.packages("future")
library(tidyverse)
library(tictoc)
library(future)
options(future.globals.maxSize= 10000000000)
plan(multicore)
bas_filepath <- "./data/metadata/average_quality_dt.txt"
#bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/bas_dt"
bas_dt <- read_tsv(bas_filepath)
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/bas_dt"
bas_dt <- read_tsv(bas_filepath)
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/average_quality_dt.txt"
bas_dt <- read_tsv(bas_filepath)
avg_qual_mean <- bas_dt$avg_qual_mean
#LF <- readRDS("./data/preprocessed/lf.rds")
LF <- readRDS("/Users/luke/Documents/GitHub/QualityPaper/rick/")
#LF <- readRDS("./data/preprocessed/lf.rds")
LF <- readRDS("/Users/luke/Documents/GitHub/QualityPaper/rick/lf.rds")
bas_dt <- bind_cols(bas_dt,
tibble(lf1=LF[,1], lf2=LF[,2],lf3=LF[,3]))
ggplot(bas_dt,
aes(lf2, lf3, color=Population)) +
geom_point(size=0.6, alpha=.6) +
theme_bw()
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/average_quality_dt.txt"
bas_dt <- read_tsv(bas_filepath)
avg_qual_mean <- bas_dt$avg_qual_mean
Qual <- read.table('/Users/luke/Dropbox/LukeTemp/SubMeta.txt')
head(Qual)
head(bas_dt)
Qual <- merge(Qual, bas_dt, by.x='Name',by.y='sample')
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/average_quality_dt.txt"
bas_dt <- read_tsv(bas_filepath)
avg_qual_mean <- bas_dt$avg_qual_mean
Qual <- read.table('/Users/luke/Dropbox/LukeTemp/SubMeta.txt')
Qual <- merge(Qual, bas_dt, by.x='Name',by.y='sample')
head(Qual)
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/average_quality_dt.txt"
bas_dt <- read_tsv(bas_filepath)
avg_qual_mean <- bas_dt$avg_qual_mean
Qual <- read.table('/Users/luke/Dropbox/LukeTemp/SubMeta.txt')
Qual <- merge(Qual, bas_dt, by.x='Name',by.y='sample')
ggplot(Qual, aes(x=average_quality_of_mapped_bases, y=avg_qual_mean))+geom_point()
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file(), fig.width=16)
#knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file(), fig.width=16)
#options(scipen=999)
library(tidyverse)
library(tictoc)
library(future)
options(future.globals.maxSize= 10000000000)
plan(multicore)
#bas_filepath <- "./data/metadata/average_quality_dt.txt"
bas_filepath <- "/Users/luke/Documents/GitHub/QualityPaper/rick/average_quality_dt.txt"
bas_dt <- read_tsv(bas_filepath)
avg_qual_mean <- bas_dt$avg_qual_mean
Qual <- read.table('/Users/luke/Dropbox/LukeTemp/SubMeta.txt')
Qual <- merge(Qual, bas_dt, by.x='Name',by.y='sample')
ggplot(Qual, aes(x=average_quality_of_mapped_bases, y=avg_qual_mean))+geom_point()
#LF <- readRDS("./data/preprocessed/lf.rds")
LF <- readRDS("/Users/luke/Documents/GitHub/QualityPaper/rick/lf.rds")
bas_dt <- bind_cols(bas_dt,
tibble(lf1=LF[,1], lf2=LF[,2],lf3=LF[,3]))
ggplot(bas_dt,
aes(lf2, lf3, color=Population)) +
geom_point(size=0.6, alpha=.6) +
theme_bw()
ggplot(bas_dt,
aes(lf1, lf3, color=Population)) +
geom_point(size=0.6, alpha=.6) +
theme_bw()
ggplot(bas_dt,
aes(lf1, lf2, color=Population)) +
geom_point(size=0.6, alpha=.6) +
theme_bw()
head(bas_dt)
#read colors per pop (used in 1kG Nature)
colors<-read.table("~/Dropbox/LukeTemp/NamePopBigPop_color.html.txt", comment.char='>',col.names=c('Pop','hex','BigPop'))
MyColour <- as.character(colors $hex)
names(MyColour) <- colors $Pop
ggplot(bas_dt,
aes(lf2, lf3, color=Population)) +
geom_point(size=0.6, alpha=.6) +
scale_color_manual(breaks= bas_dt$Population,values = MyColour) +
theme_bw()
ggplot(bas_dt,
aes(lf1, lf3, color=Population)) +
geom_point(size=0.6, alpha=.6) +
scale_color_manual(breaks= bas_dt$Population,values = MyColour) +
theme_bw()
ggplot(bas_dt,
aes(lf1, lf2, color=Population)) +
geom_point(size=0.6, alpha=.6) +
scale_color_manual(breaks= bas_dt$Population,values = MyColour) +
theme_bw()
ggplot(bas_dt,
aes(lf1, lf2, color=Population)) +
geom_point(size=0.6, alpha=.6) +
scale_color_manual(breaks= bas_dt$Population,values = MyColour) +
guides(color=guide_legend(override.aes = list(shape = 15, size=3),ncol=1),shape=F)+
theme_bw()
library(ggplot2)
library(RColorBrewer)
library(plotly)
install.packages("plotly")
library(ggplot2)
library(RColorBrewer)
library(plotly)
library(colorspace)
library(cowplot)
library(data.table)
library(tidyverse)
library(purrr)
#Directories
filterPath <- '/Users/luke/genomes/genomes/1kGP_4bedFiltered/'
miscPath <- '~/Documents/QualityPaper/Misc/'
figurePath <- '~/Documents/QualityPaper/Figures/'
paste0(filterPath,
'1kGP_GenomeWide.4bed_filtered_sig6.freq.hwe')
